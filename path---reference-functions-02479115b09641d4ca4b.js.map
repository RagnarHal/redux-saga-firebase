{"version":3,"sources":["webpack:///path---reference-functions-02479115b09641d4ca4b.js","webpack:///./.cache/json/reference-functions.json"],"names":["webpackJsonp","1132","module","exports","data","site","siteMetadata","docsDirectory","github","url","file","base","sourceInstanceName","markdown","html","frontmatter","title","methods","arguments","description","name","type","example","generator","id","output","signature","pathContext","fileName"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,cAAA,OAAAC,QAAiCC,IAAA,iDAAsDC,MAASC,KAAA,eAAAC,mBAAA,YAAAC,UAAmEC,KAAA,GAAAC,aAAyBC,MAAA,YAAAC,UAAgCC,YAAcC,YAAA,kLAAAC,KAAA,eAAAC,KAAA,WAAwOF,YAAA,oGAA8BC,KAAA,cAAAC,KAAA,WAA2HF,YAAA,4OAA8BC,KAAA,OAAAC,KAAA,WAA0PF,YAAA,wjBAA+jBG,QAAA,4sBAAstBC,WAAA,EAAAC,GAAA,OAAAC,OAAA,sHAAAC,UAAA,wDAAwOC,aAAgBC,SAAA","file":"path---reference-functions-02479115b09641d4ca4b.js","sourcesContent":["webpackJsonp([100953447911472],{\n\n/***/ 1132:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"docsDirectory\":\"docs\",\"github\":{\"url\":\"https://github.com/n6g7/redux-saga-firebase\"}}},\"file\":{\"base\":\"functions.md\",\"sourceInstanceName\":\"reference\",\"markdown\":{\"html\":\"\",\"frontmatter\":{\"title\":\"Functions\",\"methods\":[{\"arguments\":[{\"description\":\"A string representing the function name. This will be used as a pathname in the https request. Can also be an URL, in that case it is used as is when making the function call.\",\"name\":\"functionName\",\"type\":\"String\"},{\"description\":\"Defaults to `{}`. A javascript object describing the query parameters to use in the http request.\",\"name\":\"queryParams\",\"type\":\"Object\"},{\"description\":\"Defaults to `{}`. An options object containing any custom settings that you want to apply to the request. Identical to [`fetch`'s argument](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters).\",\"name\":\"init\",\"type\":\"Object\"}],\"description\":\"Calls a [cloud function](https://firebase.google.com/docs/functions/) with the given parameters.\\nThe function has to be triggered by HTTP request.\\n\\n⚠️ You will need to **enable CORS** in order for this to work.\\nThe easiest way to do so is to use the [cors](https://www.npmjs.com/package/cors) middleware for express.\\n\\nThis assumes that your functions are hosted in the `us-central1` region.\\nIf this is not the case you can change the region used by setting `rsf.region`:\\n\\n```js\\nconst rsf = new ReduxSagaFirebase(...);\\nrsf.region = 'other-region1';\\n```\\n\",\"example\":\"```js\\nfunction* callFunction() {\\n  // Will make a POST request to https://us-central1-project-id.firebaseapp.com/sayHello?name=Elon\\n  // with custom headers\\n  const result = yield call(\\n    rsf.functions.call,\\n    'sayHello',\\n    {\\n      name: 'Elon'\\n    },\\n    {\\n      method: 'POST',\\n      headers: {\\n        'Authorization': 'Bearer abc123'\\n      }\\n    }\\n  );\\n\\n  // `result` is either an object or a string (depends on response's Content-Type)\\n}\\n```\\n```js\\nfunction* callFunction() {\\n  // Will make a GET request to https://my.host/sayHello?name=Elon\\n  const result = yield call(\\n    rsf.functions.call,\\n    'https://my.host/sayHello',\\n    {\\n      name: 'Elon'\\n    }\\n  );\\n}\\n```\\n\",\"generator\":true,\"id\":\"call\",\"output\":\"A javascript object (`application/json`) or a string (anything else) depending on the Content-Type of the response.\",\"signature\":\"functions.call(functionName, queryParams, init)\"}]}}}},\"pathContext\":{\"fileName\":\"functions\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---reference-functions-02479115b09641d4ca4b.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"docsDirectory\":\"docs\",\"github\":{\"url\":\"https://github.com/n6g7/redux-saga-firebase\"}}},\"file\":{\"base\":\"functions.md\",\"sourceInstanceName\":\"reference\",\"markdown\":{\"html\":\"\",\"frontmatter\":{\"title\":\"Functions\",\"methods\":[{\"arguments\":[{\"description\":\"A string representing the function name. This will be used as a pathname in the https request. Can also be an URL, in that case it is used as is when making the function call.\",\"name\":\"functionName\",\"type\":\"String\"},{\"description\":\"Defaults to `{}`. A javascript object describing the query parameters to use in the http request.\",\"name\":\"queryParams\",\"type\":\"Object\"},{\"description\":\"Defaults to `{}`. An options object containing any custom settings that you want to apply to the request. Identical to [`fetch`'s argument](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters).\",\"name\":\"init\",\"type\":\"Object\"}],\"description\":\"Calls a [cloud function](https://firebase.google.com/docs/functions/) with the given parameters.\\nThe function has to be triggered by HTTP request.\\n\\n⚠️ You will need to **enable CORS** in order for this to work.\\nThe easiest way to do so is to use the [cors](https://www.npmjs.com/package/cors) middleware for express.\\n\\nThis assumes that your functions are hosted in the `us-central1` region.\\nIf this is not the case you can change the region used by setting `rsf.region`:\\n\\n```js\\nconst rsf = new ReduxSagaFirebase(...);\\nrsf.region = 'other-region1';\\n```\\n\",\"example\":\"```js\\nfunction* callFunction() {\\n  // Will make a POST request to https://us-central1-project-id.firebaseapp.com/sayHello?name=Elon\\n  // with custom headers\\n  const result = yield call(\\n    rsf.functions.call,\\n    'sayHello',\\n    {\\n      name: 'Elon'\\n    },\\n    {\\n      method: 'POST',\\n      headers: {\\n        'Authorization': 'Bearer abc123'\\n      }\\n    }\\n  );\\n\\n  // `result` is either an object or a string (depends on response's Content-Type)\\n}\\n```\\n```js\\nfunction* callFunction() {\\n  // Will make a GET request to https://my.host/sayHello?name=Elon\\n  const result = yield call(\\n    rsf.functions.call,\\n    'https://my.host/sayHello',\\n    {\\n      name: 'Elon'\\n    }\\n  );\\n}\\n```\\n\",\"generator\":true,\"id\":\"call\",\"output\":\"A javascript object (`application/json`) or a string (anything else) depending on the Content-Type of the response.\",\"signature\":\"functions.call(functionName, queryParams, init)\"}]}}}},\"pathContext\":{\"fileName\":\"functions\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/reference-functions.json\n// module id = 1132\n// module chunks = 100953447911472"],"sourceRoot":""}