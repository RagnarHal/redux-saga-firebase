{"version":3,"sources":["webpack:///path---reference-storage-662b9f5e6138fe4b0cd8.js","webpack:///./.cache/json/reference-storage.json"],"names":["webpackJsonp","1144","module","exports","data","site","siteMetadata","docsDirectory","github","url","file","base","sourceInstanceName","markdown","html","frontmatter","title","methods","arguments","description","name","type","example","generator","id","output","signature","pathContext","fileName"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,cAAA,OAAAC,QAAiCC,IAAA,iDAAsDC,MAASC,KAAA,aAAAC,mBAAA,YAAAC,UAAiEC,KAAA,GAAAC,aAAyBC,MAAA,UAAAC,UAA8BC,YAAcC,YAAA,mDAAAC,KAAA,YAAAC,KAAA,qHAAgNF,YAAA,4CAAAC,KAAA,OAAAC,KAAA,2OAA0TF,YAAA,kCAAAC,KAAA,WAAAC,KAAA,oGAA2KF,YAAA,mCAAAG,QAAA,kUAAsXC,WAAA,EAAAC,GAAA,aAAAC,OAAA,qGAAAC,UAAA,kDAAyNR,YAAcC,YAAA,mDAAAC,KAAA,YAAAC,KAAA,qHAAgNF,YAAA,yBAAAC,KAAA,SAAAC,KAAA,WAAyEF,YAAA,+DAAAC,KAAA,SAAAC,KAAA,WAA+GF,YAAA,kCAAAC,KAAA,WAAAC,KAAA,oGAA2KF,YAAA,kGAAAG,QAAA,oVAAucC,WAAA,EAAAC,GAAA,eAAAC,OAAA,qGAAAC,UAAA,8DAAuOR,YAAcC,YAAA,mDAAAC,KAAA,YAAAC,KAAA,qHAA8MF,YAAA,6DAAAG,QAAA,0JAAwOC,WAAA,EAAAC,GAAA,iBAAAC,OAAA,sBAAAC,UAAA,sCAAiIR,YAAcC,YAAA,mDAAAC,KAAA,YAAAC,KAAA,qHAA8MF,YAAA,2CAAAG,QAAA,8IAA0MC,WAAA,EAAAC,GAAA,kBAAAC,OAAA,wGAAAC,UAAA,uCAAqNR,YAAcC,YAAA,mDAAAC,KAAA,YAAAC,KAAA,qHAAgNF,YAAA,sCAAAC,KAAA,cAAAC,KAAA,iHAA+LF,YAAA,mCAAAG,QAAA,uLAA2OC,WAAA,EAAAC,GAAA,qBAAAC,OAAA,wGAAAC,UAAA,uDAAwOR,YAAcC,YAAA,mDAAAC,KAAA,YAAAC,KAAA,qHAA8MF,YAAA,kBAAAG,QAAA,sGAAyIC,WAAA,EAAAC,GAAA,aAAAC,OAAA,KAAAC,UAAA,sCAA2GC,aAAgBC,SAAA","file":"path---reference-storage-662b9f5e6138fe4b0cd8.js","sourcesContent":["webpackJsonp([210276329909460],{\n\n/***/ 1144:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"docsDirectory\":\"docs\",\"github\":{\"url\":\"https://github.com/n6g7/redux-saga-firebase\"}}},\"file\":{\"base\":\"storage.md\",\"sourceInstanceName\":\"reference\",\"markdown\":{\"html\":\"\",\"frontmatter\":{\"title\":\"Storage\",\"methods\":[{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"},{\"description\":\"The file to upload at the specified path.\",\"name\":\"file\",\"type\":\"[Blob](https://developer.mozilla.org/en/docs/Web/API/Blob), [File](https://developer.mozilla.org/en-US/docs/Web/API/File) or [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)\"},{\"description\":\"Metadata to attach to the file.\",\"name\":\"metadata\",\"type\":\"[UploadMetadata](https://firebase.google.com/docs/reference/js/firebase.storage.UploadMetadata)\"}],\"description\":\"Uploads a file to cloud storage.\",\"example\":\"```js\\nfunction* uploadFile(action) {\\n  const task = yield call(rsf.storage.uploadFile, action.path, action.file);\\n\\n  const channel = eventChannel(emit => task.on('state_changed', emit));\\n\\n  yield takeEvery(channel, ...);\\n\\n  // Wait for upload to complete\\n  yield task\\n\\n  // Do something on complete\\n}\\n```\\n\",\"generator\":false,\"id\":\"uploadFile\",\"output\":\"An [UploadTask](https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask) object.\",\"signature\":\"storage.uploadFile(pathOrRef, file, metadata)\"},{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"},{\"description\":\"The content to upload.\",\"name\":\"string\",\"type\":\"String\"},{\"description\":\"Available options are: `base64`, `base64url`, or `data_url`.\",\"name\":\"format\",\"type\":\"String\"},{\"description\":\"Metadata to attach to the file.\",\"name\":\"metadata\",\"type\":\"[UploadMetadata](https://firebase.google.com/docs/reference/js/firebase.storage.UploadMetadata)\"}],\"description\":\"Use this to upload a raw, `base64`, `base64url`, or `data_url` encoded string to Cloud Storage.\",\"example\":\"```js\\nfunction* uploadString(action) {\\n  const task = yield call(rsf.storage.uploadString, action.path, action.fileData, 'base64');\\n\\n  const channel = eventChannel(emit => task.on('state_changed', emit));\\n\\n  yield takeEvery(channel, ...);\\n\\n  // Wait for upload to complete\\n  yield task\\n\\n  // Do something on complete\\n}\\n```\\n\",\"generator\":false,\"id\":\"uploadString\",\"output\":\"An [UploadTask](https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask) object.\",\"signature\":\"storage.uploadString(pathOrRef, string, format, metadata)\"},{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"}],\"description\":\"Returns a download url for the file at the specified path.\",\"example\":\"```js\\nfunction* downloadFile(action) {\\n  const url = yield call(rsf.storage.getDownloadURL, action.path);\\n\\n  yield call(fetch, url, ...);\\n}\\n```\\n\",\"generator\":true,\"id\":\"getDownloadURL\",\"output\":\"An URL as a string.\",\"signature\":\"storage.getDownloadURL(pathOrRef)\"},{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"}],\"description\":\"Returns the metadata attached to a file.\",\"example\":\"```js\\nfunction* metadata(action) {\\n  const metadata = yield call(rsf.storage.getFileMetadata, action.path);\\n  return metadata;\\n}\\n```\\n\",\"generator\":true,\"id\":\"getFileMetadata\",\"output\":\"A [FullMetadata](https://firebase.google.com/docs/reference/js/firebase.storage.FullMetadata) object.\",\"signature\":\"storage.getFileMetadata(pathOrRef)\"},{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"},{\"description\":\"The metadata to attach to the file.\",\"name\":\"newMetadata\",\"type\":\"A [SettableMetadata](https://firebase.google.com/docs/reference/js/firebase.storage.SettableMetadata) object\"}],\"description\":\"Updates the metadata for a file.\",\"example\":\"```js\\nfunction* setToPng(action) {\\n  const metadata = yield call(rsf.storage.updateFileMetadata, action.path, {\\n    contentType: 'image/png'\\n  });\\n  return metadata;\\n}\\n```\\n\",\"generator\":true,\"id\":\"updateFileMetadata\",\"output\":\"A [FullMetadata](https://firebase.google.com/docs/reference/js/firebase.storage.FullMetadata) object.\",\"signature\":\"storage.updateFileMetadata(pathOrRef, newMetadata)\"},{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"}],\"description\":\"Deletes a file.\",\"example\":\"```js\\nfunction* deleteFile(action) {\\n  yield call(rsf.storage.deleteFile, action.path);\\n}\\n```\\n\",\"generator\":true,\"id\":\"deleteFile\",\"output\":null,\"signature\":\"storage.deleteFile(pathOrRef)\"}]}}}},\"pathContext\":{\"fileName\":\"storage\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---reference-storage-662b9f5e6138fe4b0cd8.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"docsDirectory\":\"docs\",\"github\":{\"url\":\"https://github.com/n6g7/redux-saga-firebase\"}}},\"file\":{\"base\":\"storage.md\",\"sourceInstanceName\":\"reference\",\"markdown\":{\"html\":\"\",\"frontmatter\":{\"title\":\"Storage\",\"methods\":[{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"},{\"description\":\"The file to upload at the specified path.\",\"name\":\"file\",\"type\":\"[Blob](https://developer.mozilla.org/en/docs/Web/API/Blob), [File](https://developer.mozilla.org/en-US/docs/Web/API/File) or [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)\"},{\"description\":\"Metadata to attach to the file.\",\"name\":\"metadata\",\"type\":\"[UploadMetadata](https://firebase.google.com/docs/reference/js/firebase.storage.UploadMetadata)\"}],\"description\":\"Uploads a file to cloud storage.\",\"example\":\"```js\\nfunction* uploadFile(action) {\\n  const task = yield call(rsf.storage.uploadFile, action.path, action.file);\\n\\n  const channel = eventChannel(emit => task.on('state_changed', emit));\\n\\n  yield takeEvery(channel, ...);\\n\\n  // Wait for upload to complete\\n  yield task\\n\\n  // Do something on complete\\n}\\n```\\n\",\"generator\":false,\"id\":\"uploadFile\",\"output\":\"An [UploadTask](https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask) object.\",\"signature\":\"storage.uploadFile(pathOrRef, file, metadata)\"},{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"},{\"description\":\"The content to upload.\",\"name\":\"string\",\"type\":\"String\"},{\"description\":\"Available options are: `base64`, `base64url`, or `data_url`.\",\"name\":\"format\",\"type\":\"String\"},{\"description\":\"Metadata to attach to the file.\",\"name\":\"metadata\",\"type\":\"[UploadMetadata](https://firebase.google.com/docs/reference/js/firebase.storage.UploadMetadata)\"}],\"description\":\"Use this to upload a raw, `base64`, `base64url`, or `data_url` encoded string to Cloud Storage.\",\"example\":\"```js\\nfunction* uploadString(action) {\\n  const task = yield call(rsf.storage.uploadString, action.path, action.fileData, 'base64');\\n\\n  const channel = eventChannel(emit => task.on('state_changed', emit));\\n\\n  yield takeEvery(channel, ...);\\n\\n  // Wait for upload to complete\\n  yield task\\n\\n  // Do something on complete\\n}\\n```\\n\",\"generator\":false,\"id\":\"uploadString\",\"output\":\"An [UploadTask](https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask) object.\",\"signature\":\"storage.uploadString(pathOrRef, string, format, metadata)\"},{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"}],\"description\":\"Returns a download url for the file at the specified path.\",\"example\":\"```js\\nfunction* downloadFile(action) {\\n  const url = yield call(rsf.storage.getDownloadURL, action.path);\\n\\n  yield call(fetch, url, ...);\\n}\\n```\\n\",\"generator\":true,\"id\":\"getDownloadURL\",\"output\":\"An URL as a string.\",\"signature\":\"storage.getDownloadURL(pathOrRef)\"},{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"}],\"description\":\"Returns the metadata attached to a file.\",\"example\":\"```js\\nfunction* metadata(action) {\\n  const metadata = yield call(rsf.storage.getFileMetadata, action.path);\\n  return metadata;\\n}\\n```\\n\",\"generator\":true,\"id\":\"getFileMetadata\",\"output\":\"A [FullMetadata](https://firebase.google.com/docs/reference/js/firebase.storage.FullMetadata) object.\",\"signature\":\"storage.getFileMetadata(pathOrRef)\"},{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"},{\"description\":\"The metadata to attach to the file.\",\"name\":\"newMetadata\",\"type\":\"A [SettableMetadata](https://firebase.google.com/docs/reference/js/firebase.storage.SettableMetadata) object\"}],\"description\":\"Updates the metadata for a file.\",\"example\":\"```js\\nfunction* setToPng(action) {\\n  const metadata = yield call(rsf.storage.updateFileMetadata, action.path, {\\n    contentType: 'image/png'\\n  });\\n  return metadata;\\n}\\n```\\n\",\"generator\":true,\"id\":\"updateFileMetadata\",\"output\":\"A [FullMetadata](https://firebase.google.com/docs/reference/js/firebase.storage.FullMetadata) object.\",\"signature\":\"storage.updateFileMetadata(pathOrRef, newMetadata)\"},{\"arguments\":[{\"description\":\"The path or reference of the file in the bucket.\",\"name\":\"pathOrRef\",\"type\":\"String or [Firebase Storage Reference](https://firebase.google.com/docs/reference/js/firebase.storage.Reference)\"}],\"description\":\"Deletes a file.\",\"example\":\"```js\\nfunction* deleteFile(action) {\\n  yield call(rsf.storage.deleteFile, action.path);\\n}\\n```\\n\",\"generator\":true,\"id\":\"deleteFile\",\"output\":null,\"signature\":\"storage.deleteFile(pathOrRef)\"}]}}}},\"pathContext\":{\"fileName\":\"storage\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/reference-storage.json\n// module id = 1144\n// module chunks = 210276329909460"],"sourceRoot":""}